<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.php-getdns-context-get-update-callback" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>php_getdns_context_get_update_callback</refname>
  <refpurpose>Get the name of the function that will be called when a context value changes.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>php_getdns_context_get_update_callback</methodname>
   <methodparam><type>int</type><parameter>context</parameter></methodparam>
   <methodparam><type>array</type><parameter role="reference">userArg</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function gets the name of a callback function in PHP user space and
   associated user arguments that will be called when a context value changes.
   The callback function will be written to accept two parameters. The first
   is an integer value that identifies the context element that has been
   changed. The second is an array that represents the user arguments passed
   to the php_getdns_context_set_update_callback() function.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>context</parameter></term>
    <listitem>
     <para>
      The previously created DNS context that is to be used with this request.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>userArg</parameter></term>
    <listitem>
     <para>
      Either NULL if no context update callback has been set or an
      indexed array that contains information used to control callback
      processing. The first element of the array will contain a character
      string representing the name of the PHP client function that will
      be called when a context value changes. Additional array
      elements are optional and may be present if user arguments were
      passed to the php_getdns_context_set_update_callback() function.
      The callback function will receive the complete array for local
      processing with all elements included as specified. Note that
      this argument is passed by reference and any existing value will
      be overwritten.
     </para>
     <para>
      It's important to understand that the getdns library copies the
      address of the userArg data structure that was passed to the
      php_getdns_context_set_update_callback() function. Any changes
      to this value that are made after calling
      php_getdns_context_set_update_callback() may have unintended
      consequences. Callers should use a new PHP variable to receive
      the userArg array from this function to avoid overwriting any
      existing values that were previously set.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   This function returns an integer response code. GETDNS_RETURN_GOOD
   indicates successful completion.
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
