<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.php-getdns-hostname" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>php_getdns_hostname</refname>
  <refpurpose>Asynchronously retrieve host names given an IP address.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>php_getdns_hostname</methodname>
   <methodparam><type>int</type><parameter>context</parameter></methodparam>
   <methodparam><type>int</type><parameter>address</parameter></methodparam>
   <methodparam><type>int</type><parameter>extensions</parameter></methodparam>
   <methodparam><type>array</type><parameter>userArg</parameter></methodparam>
   <methodparam><type>mixed</type><parameter role="reference">transID</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function provides an entry point into the getdns API library to asynchronously
   retrieve host names given an IPv4 or IPv6 address.
   See php_getdns_hostname_sync() for a description of the response data structure.
  </para>
  <para>
   Note that this function enqueues an event that must be processed to produce
   queries and return results. Calling php_context_run() after calling this
   function will ensure that all queued events are processed.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>context</parameter></term>
    <listitem>
     <para>
      The previously created DNS context that is to be used with this request.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>address</parameter></term>
    <listitem>
     <para>
      A reference to a dictionary structure containing two names: address_type (whose
      value is bindata and is either "IPv4" or "IPv6") and address_data (whose value
      is a binary character string (bindata) representing the address to be resolved).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>extensions</parameter></term>
    <listitem>
     <para>
      The extensions dictionary for this request; NULL or 0 (zero) if no extensions.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>userArg</parameter></term>
    <listitem>
     <para>
      An indexed array that contains information used to control callback
      processing. The first element of the array must contain a character
      string representing the name of the PHP client function that will
      receive and process the result of the DNS query. Additional array
      elements are optional and may be included to be passed to the
      callback function. The callback function will receive the complete
      array for local processing with all elements included as specified.
     </para>
     <para>
      The callback function should be declared as follows:
      <programlisting>
        function_name($dict, $callbackType, $userArg, $transID)
        // $dict: An int representing the dictionary containing the response.
        // $callbackType: The getdns callback type.
        // $userArg: The original user arguments provided by the caller.
        // $transID: A 16-character string in hex format that contains the identifier of the transaction being processed.
      </programlisting>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>transID</parameter></term>
    <listitem>
     <para>
      A 16-character string value in hexadecimal format representing an unsigned
      64-bit integer that is filled in by the function to identify the callback
      being made. This value is passed by reference and any existing value will
      be overwritten; an empty string ("") is acceptable on input. It can also
      be NULL, in which case it is ignored and no value is assigned.
      The php_getdns_cancel_callback() function uses the transID to determine which
      callback is to be cancelled.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   This function returns an integer response code. GETDNS_RETURN_GOOD indicates successful completion.
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
