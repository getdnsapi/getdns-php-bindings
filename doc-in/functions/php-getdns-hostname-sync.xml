<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->

<refentry xml:id="function.php-getdns-hostname-sync" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>php_getdns_hostname_sync</refname>
  <refpurpose>Synchronously retrieve host names given an IP address.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>php_getdns_hostname_sync</methodname>
   <methodparam><type>int</type><parameter>context</parameter></methodparam>
   <methodparam><type>int</type><parameter>address</parameter></methodparam>
   <methodparam><type>int</type><parameter>extensions</parameter></methodparam>
   <methodparam><type>int</type><parameter role="reference">response</parameter></methodparam>
  </methodsynopsis>
  <para>
   This function provides an entry point into the getdns API library to synchronously
   retrieve host names given an IPv4 or IPv6 address.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>context</parameter></term>
    <listitem>
     <para>
      The previously created DNS context that is to be used with this request.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>address</parameter></term>
    <listitem>
     <para>
      A reference to a dictionary structure containing two names: address_type (whose
      value is bindata and is either "IPv4" or "IPv6") and address_data (whose value
      is a binary character string (bindata) representing the address to be resolved).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>extensions</parameter></term>
    <listitem>
     <para>
      The extensions dictionary for this request; NULL or 0 (zero) if no extensions.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>response</parameter></term>
    <listitem>
     <para>
      The dictionary to receive the response. The dictionary always contains at least
      three names: replies_full (a list containing the DNS response as binary data),
      replies_tree (a list containing the parsed DNS response data) and status (an
      int). Note that this argument is passed by reference and any existing value will
      be overwritten. The response must be freed using php_getdns_dict_destroy().
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   This function returns an integer response code. GETDNS_RETURN_GOOD indicates successful completion.
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
